/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.openrtb.common.api;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Geo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Geo\",\"namespace\":\"org.openrtb.common.api\",\"fields\":[{\"name\":\"lat\",\"type\":[\"float\",\"null\"]},{\"name\":\"lon\",\"type\":[\"float\",\"null\"]},{\"name\":\"country\",\"type\":[\"string\",\"null\"]},{\"name\":\"region\",\"type\":[\"string\",\"null\"]},{\"name\":\"regionfips104\",\"type\":[\"string\",\"null\"]},{\"name\":\"metro\",\"type\":[\"string\",\"null\"]},{\"name\":\"city\",\"type\":[\"string\",\"null\"]},{\"name\":\"zip\",\"type\":[\"string\",\"null\"]},{\"name\":\"type\",\"type\":[\"int\",\"null\"]},{\"name\":\"ext\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Float lat;
  @Deprecated public java.lang.Float lon;
  @Deprecated public java.lang.CharSequence country;
  @Deprecated public java.lang.CharSequence region;
  @Deprecated public java.lang.CharSequence regionfips104;
  @Deprecated public java.lang.CharSequence metro;
  @Deprecated public java.lang.CharSequence city;
  @Deprecated public java.lang.CharSequence zip;
  @Deprecated public java.lang.Integer type;
  @Deprecated public java.lang.CharSequence ext;

  /**
   * Default constructor.
   */
  public Geo() {}

  /**
   * All-args constructor.
   */
  public Geo(java.lang.Float lat, java.lang.Float lon, java.lang.CharSequence country, java.lang.CharSequence region, java.lang.CharSequence regionfips104, java.lang.CharSequence metro, java.lang.CharSequence city, java.lang.CharSequence zip, java.lang.Integer type, java.lang.CharSequence ext) {
    this.lat = lat;
    this.lon = lon;
    this.country = country;
    this.region = region;
    this.regionfips104 = regionfips104;
    this.metro = metro;
    this.city = city;
    this.zip = zip;
    this.type = type;
    this.ext = ext;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return lat;
    case 1: return lon;
    case 2: return country;
    case 3: return region;
    case 4: return regionfips104;
    case 5: return metro;
    case 6: return city;
    case 7: return zip;
    case 8: return type;
    case 9: return ext;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: lat = (java.lang.Float)value$; break;
    case 1: lon = (java.lang.Float)value$; break;
    case 2: country = (java.lang.CharSequence)value$; break;
    case 3: region = (java.lang.CharSequence)value$; break;
    case 4: regionfips104 = (java.lang.CharSequence)value$; break;
    case 5: metro = (java.lang.CharSequence)value$; break;
    case 6: city = (java.lang.CharSequence)value$; break;
    case 7: zip = (java.lang.CharSequence)value$; break;
    case 8: type = (java.lang.Integer)value$; break;
    case 9: ext = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'lat' field.
   */
  public java.lang.Float getLat() {
    return lat;
  }

  /**
   * Sets the value of the 'lat' field.
   * @param value the value to set.
   */
  public void setLat(java.lang.Float value) {
    this.lat = value;
  }

  /**
   * Gets the value of the 'lon' field.
   */
  public java.lang.Float getLon() {
    return lon;
  }

  /**
   * Sets the value of the 'lon' field.
   * @param value the value to set.
   */
  public void setLon(java.lang.Float value) {
    this.lon = value;
  }

  /**
   * Gets the value of the 'country' field.
   */
  public java.lang.CharSequence getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'region' field.
   */
  public java.lang.CharSequence getRegion() {
    return region;
  }

  /**
   * Sets the value of the 'region' field.
   * @param value the value to set.
   */
  public void setRegion(java.lang.CharSequence value) {
    this.region = value;
  }

  /**
   * Gets the value of the 'regionfips104' field.
   */
  public java.lang.CharSequence getRegionfips104() {
    return regionfips104;
  }

  /**
   * Sets the value of the 'regionfips104' field.
   * @param value the value to set.
   */
  public void setRegionfips104(java.lang.CharSequence value) {
    this.regionfips104 = value;
  }

  /**
   * Gets the value of the 'metro' field.
   */
  public java.lang.CharSequence getMetro() {
    return metro;
  }

  /**
   * Sets the value of the 'metro' field.
   * @param value the value to set.
   */
  public void setMetro(java.lang.CharSequence value) {
    this.metro = value;
  }

  /**
   * Gets the value of the 'city' field.
   */
  public java.lang.CharSequence getCity() {
    return city;
  }

  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.CharSequence value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'zip' field.
   */
  public java.lang.CharSequence getZip() {
    return zip;
  }

  /**
   * Sets the value of the 'zip' field.
   * @param value the value to set.
   */
  public void setZip(java.lang.CharSequence value) {
    this.zip = value;
  }

  /**
   * Gets the value of the 'type' field.
   */
  public java.lang.Integer getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.Integer value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'ext' field.
   */
  public java.lang.CharSequence getExt() {
    return ext;
  }

  /**
   * Sets the value of the 'ext' field.
   * @param value the value to set.
   */
  public void setExt(java.lang.CharSequence value) {
    this.ext = value;
  }

  /** Creates a new Geo RecordBuilder */
  public static org.openrtb.common.api.Geo.Builder newBuilder() {
    return new org.openrtb.common.api.Geo.Builder();
  }
  
  /** Creates a new Geo RecordBuilder by copying an existing Builder */
  public static org.openrtb.common.api.Geo.Builder newBuilder(org.openrtb.common.api.Geo.Builder other) {
    return new org.openrtb.common.api.Geo.Builder(other);
  }
  
  /** Creates a new Geo RecordBuilder by copying an existing Geo instance */
  public static org.openrtb.common.api.Geo.Builder newBuilder(org.openrtb.common.api.Geo other) {
    return new org.openrtb.common.api.Geo.Builder(other);
  }
  
  /**
   * RecordBuilder for Geo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Geo>
    implements org.apache.avro.data.RecordBuilder<Geo> {

    private java.lang.Float lat;
    private java.lang.Float lon;
    private java.lang.CharSequence country;
    private java.lang.CharSequence region;
    private java.lang.CharSequence regionfips104;
    private java.lang.CharSequence metro;
    private java.lang.CharSequence city;
    private java.lang.CharSequence zip;
    private java.lang.Integer type;
    private java.lang.CharSequence ext;

    /** Creates a new Builder */
    private Builder() {
      super(org.openrtb.common.api.Geo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.openrtb.common.api.Geo.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Geo instance */
    private Builder(org.openrtb.common.api.Geo other) {
            super(org.openrtb.common.api.Geo.SCHEMA$);
      if (isValidValue(fields()[0], other.lat)) {
        this.lat = data().deepCopy(fields()[0].schema(), other.lat);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lon)) {
        this.lon = data().deepCopy(fields()[1].schema(), other.lon);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.country)) {
        this.country = data().deepCopy(fields()[2].schema(), other.country);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.region)) {
        this.region = data().deepCopy(fields()[3].schema(), other.region);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.regionfips104)) {
        this.regionfips104 = data().deepCopy(fields()[4].schema(), other.regionfips104);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.metro)) {
        this.metro = data().deepCopy(fields()[5].schema(), other.metro);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.city)) {
        this.city = data().deepCopy(fields()[6].schema(), other.city);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.zip)) {
        this.zip = data().deepCopy(fields()[7].schema(), other.zip);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.type)) {
        this.type = data().deepCopy(fields()[8].schema(), other.type);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.ext)) {
        this.ext = data().deepCopy(fields()[9].schema(), other.ext);
        fieldSetFlags()[9] = true;
      }
    }

    /** Gets the value of the 'lat' field */
    public java.lang.Float getLat() {
      return lat;
    }
    
    /** Sets the value of the 'lat' field */
    public org.openrtb.common.api.Geo.Builder setLat(java.lang.Float value) {
      validate(fields()[0], value);
      this.lat = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'lat' field has been set */
    public boolean hasLat() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'lat' field */
    public org.openrtb.common.api.Geo.Builder clearLat() {
      lat = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'lon' field */
    public java.lang.Float getLon() {
      return lon;
    }
    
    /** Sets the value of the 'lon' field */
    public org.openrtb.common.api.Geo.Builder setLon(java.lang.Float value) {
      validate(fields()[1], value);
      this.lon = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'lon' field has been set */
    public boolean hasLon() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'lon' field */
    public org.openrtb.common.api.Geo.Builder clearLon() {
      lon = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'country' field */
    public java.lang.CharSequence getCountry() {
      return country;
    }
    
    /** Sets the value of the 'country' field */
    public org.openrtb.common.api.Geo.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.country = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'country' field has been set */
    public boolean hasCountry() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'country' field */
    public org.openrtb.common.api.Geo.Builder clearCountry() {
      country = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'region' field */
    public java.lang.CharSequence getRegion() {
      return region;
    }
    
    /** Sets the value of the 'region' field */
    public org.openrtb.common.api.Geo.Builder setRegion(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.region = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'region' field has been set */
    public boolean hasRegion() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'region' field */
    public org.openrtb.common.api.Geo.Builder clearRegion() {
      region = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'regionfips104' field */
    public java.lang.CharSequence getRegionfips104() {
      return regionfips104;
    }
    
    /** Sets the value of the 'regionfips104' field */
    public org.openrtb.common.api.Geo.Builder setRegionfips104(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.regionfips104 = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'regionfips104' field has been set */
    public boolean hasRegionfips104() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'regionfips104' field */
    public org.openrtb.common.api.Geo.Builder clearRegionfips104() {
      regionfips104 = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'metro' field */
    public java.lang.CharSequence getMetro() {
      return metro;
    }
    
    /** Sets the value of the 'metro' field */
    public org.openrtb.common.api.Geo.Builder setMetro(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.metro = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'metro' field has been set */
    public boolean hasMetro() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'metro' field */
    public org.openrtb.common.api.Geo.Builder clearMetro() {
      metro = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'city' field */
    public java.lang.CharSequence getCity() {
      return city;
    }
    
    /** Sets the value of the 'city' field */
    public org.openrtb.common.api.Geo.Builder setCity(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.city = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'city' field has been set */
    public boolean hasCity() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'city' field */
    public org.openrtb.common.api.Geo.Builder clearCity() {
      city = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'zip' field */
    public java.lang.CharSequence getZip() {
      return zip;
    }
    
    /** Sets the value of the 'zip' field */
    public org.openrtb.common.api.Geo.Builder setZip(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.zip = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'zip' field has been set */
    public boolean hasZip() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'zip' field */
    public org.openrtb.common.api.Geo.Builder clearZip() {
      zip = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.Integer getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public org.openrtb.common.api.Geo.Builder setType(java.lang.Integer value) {
      validate(fields()[8], value);
      this.type = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'type' field */
    public org.openrtb.common.api.Geo.Builder clearType() {
      type = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'ext' field */
    public java.lang.CharSequence getExt() {
      return ext;
    }
    
    /** Sets the value of the 'ext' field */
    public org.openrtb.common.api.Geo.Builder setExt(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.ext = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'ext' field has been set */
    public boolean hasExt() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'ext' field */
    public org.openrtb.common.api.Geo.Builder clearExt() {
      ext = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public Geo build() {
      try {
        Geo record = new Geo();
        record.lat = fieldSetFlags()[0] ? this.lat : (java.lang.Float) defaultValue(fields()[0]);
        record.lon = fieldSetFlags()[1] ? this.lon : (java.lang.Float) defaultValue(fields()[1]);
        record.country = fieldSetFlags()[2] ? this.country : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.region = fieldSetFlags()[3] ? this.region : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.regionfips104 = fieldSetFlags()[4] ? this.regionfips104 : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.metro = fieldSetFlags()[5] ? this.metro : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.city = fieldSetFlags()[6] ? this.city : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.zip = fieldSetFlags()[7] ? this.zip : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.type = fieldSetFlags()[8] ? this.type : (java.lang.Integer) defaultValue(fields()[8]);
        record.ext = fieldSetFlags()[9] ? this.ext : (java.lang.CharSequence) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
