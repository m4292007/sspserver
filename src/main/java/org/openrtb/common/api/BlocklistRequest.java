/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.openrtb.common.api;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class BlocklistRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BlocklistRequest\",\"namespace\":\"org.openrtb.common.api\",\"fields\":[{\"name\":\"identification\",\"type\":[{\"type\":\"record\",\"name\":\"Identification\",\"fields\":[{\"name\":\"organization\",\"type\":[\"string\",\"null\"]},{\"name\":\"timestamp\",\"type\":[\"long\",\"null\"]},{\"name\":\"token\",\"type\":[\"string\",\"null\"]}]},\"null\"]},{\"name\":\"advertisers\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Advertiser\",\"fields\":[{\"name\":\"landingPageTLD\",\"type\":[\"string\",\"null\"]},{\"name\":\"name\",\"type\":[\"string\",\"null\"]},{\"name\":\"timestamp\",\"type\":[\"long\",\"null\"]},{\"name\":\"blocklist\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BlocklistObj\",\"fields\":[{\"name\":\"publisherID\",\"type\":[\"string\",\"null\"]},{\"name\":\"publisherName\",\"type\":[\"string\",\"null\"]},{\"name\":\"sideID\",\"type\":[\"string\",\"null\"]},{\"name\":\"siteName\",\"type\":[\"string\",\"null\"]}]}}}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   public org.openrtb.common.api.Identification identification;
   public java.util.List<org.openrtb.common.api.Advertiser> advertisers;

  /**
   * Default constructor.
   */
  public BlocklistRequest() {}

  /**
   * All-args constructor.
   */
  public BlocklistRequest(org.openrtb.common.api.Identification identification, java.util.List<org.openrtb.common.api.Advertiser> advertisers) {
    this.identification = identification;
    this.advertisers = advertisers;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return identification;
    case 1: return advertisers;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: identification = (org.openrtb.common.api.Identification)value$; break;
    case 1: advertisers = (java.util.List<org.openrtb.common.api.Advertiser>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'identification' field.
   */
  public org.openrtb.common.api.Identification getIdentification() {
    return identification;
  }

  /**
   * Sets the value of the 'identification' field.
   * @param value the value to set.
   */
  public void setIdentification(org.openrtb.common.api.Identification value) {
    this.identification = value;
  }

  /**
   * Gets the value of the 'advertisers' field.
   */
  public java.util.List<org.openrtb.common.api.Advertiser> getAdvertisers() {
    return advertisers;
  }

  /**
   * Sets the value of the 'advertisers' field.
   * @param value the value to set.
   */
  public void setAdvertisers(java.util.List<org.openrtb.common.api.Advertiser> value) {
    this.advertisers = value;
  }

  /** Creates a new BlocklistRequest RecordBuilder */
  public static org.openrtb.common.api.BlocklistRequest.Builder newBuilder() {
    return new org.openrtb.common.api.BlocklistRequest.Builder();
  }
  
  /** Creates a new BlocklistRequest RecordBuilder by copying an existing Builder */
  public static org.openrtb.common.api.BlocklistRequest.Builder newBuilder(org.openrtb.common.api.BlocklistRequest.Builder other) {
    return new org.openrtb.common.api.BlocklistRequest.Builder(other);
  }
  
  /** Creates a new BlocklistRequest RecordBuilder by copying an existing BlocklistRequest instance */
  public static org.openrtb.common.api.BlocklistRequest.Builder newBuilder(org.openrtb.common.api.BlocklistRequest other) {
    return new org.openrtb.common.api.BlocklistRequest.Builder(other);
  }
  
  /**
   * RecordBuilder for BlocklistRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BlocklistRequest>
    implements org.apache.avro.data.RecordBuilder<BlocklistRequest> {

    private org.openrtb.common.api.Identification identification;
    private java.util.List<org.openrtb.common.api.Advertiser> advertisers;

    /** Creates a new Builder */
    private Builder() {
      super(org.openrtb.common.api.BlocklistRequest.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.openrtb.common.api.BlocklistRequest.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing BlocklistRequest instance */
    private Builder(org.openrtb.common.api.BlocklistRequest other) {
            super(org.openrtb.common.api.BlocklistRequest.SCHEMA$);
      if (isValidValue(fields()[0], other.identification)) {
        this.identification = data().deepCopy(fields()[0].schema(), other.identification);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.advertisers)) {
        this.advertisers = data().deepCopy(fields()[1].schema(), other.advertisers);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'identification' field */
    public org.openrtb.common.api.Identification getIdentification() {
      return identification;
    }
    
    /** Sets the value of the 'identification' field */
    public org.openrtb.common.api.BlocklistRequest.Builder setIdentification(org.openrtb.common.api.Identification value) {
      validate(fields()[0], value);
      this.identification = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'identification' field has been set */
    public boolean hasIdentification() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'identification' field */
    public org.openrtb.common.api.BlocklistRequest.Builder clearIdentification() {
      identification = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'advertisers' field */
    public java.util.List<org.openrtb.common.api.Advertiser> getAdvertisers() {
      return advertisers;
    }
    
    /** Sets the value of the 'advertisers' field */
    public org.openrtb.common.api.BlocklistRequest.Builder setAdvertisers(java.util.List<org.openrtb.common.api.Advertiser> value) {
      validate(fields()[1], value);
      this.advertisers = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'advertisers' field has been set */
    public boolean hasAdvertisers() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'advertisers' field */
    public org.openrtb.common.api.BlocklistRequest.Builder clearAdvertisers() {
      advertisers = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public BlocklistRequest build() {
      try {
        BlocklistRequest record = new BlocklistRequest();
        record.identification = fieldSetFlags()[0] ? this.identification : (org.openrtb.common.api.Identification) defaultValue(fields()[0]);
        record.advertisers = fieldSetFlags()[1] ? this.advertisers : (java.util.List<org.openrtb.common.api.Advertiser>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
