/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.openrtb.common.api;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class BlocklistResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BlocklistResponse\",\"namespace\":\"org.openrtb.common.api\",\"fields\":[{\"name\":\"identification\",\"type\":[{\"type\":\"record\",\"name\":\"Identification\",\"fields\":[{\"name\":\"organization\",\"type\":[\"string\",\"null\"]},{\"name\":\"timestamp\",\"type\":[\"long\",\"null\"]},{\"name\":\"token\",\"type\":[\"string\",\"null\"]}]},\"null\"]},{\"name\":\"status\",\"type\":[{\"type\":\"record\",\"name\":\"Status\",\"fields\":[{\"name\":\"requestToken\",\"type\":[\"string\",\"null\"]},{\"name\":\"statusCode\",\"type\":[\"int\",\"null\"]},{\"name\":\"statusMessage\",\"type\":[\"string\",\"null\"]}]},\"null\"]},{\"name\":\"advertisers\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Advertiser\",\"fields\":[{\"name\":\"landingPageTLD\",\"type\":[\"string\",\"null\"]},{\"name\":\"name\",\"type\":[\"string\",\"null\"]},{\"name\":\"timestamp\",\"type\":[\"long\",\"null\"]},{\"name\":\"blocklist\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BlocklistObj\",\"fields\":[{\"name\":\"publisherID\",\"type\":[\"string\",\"null\"]},{\"name\":\"publisherName\",\"type\":[\"string\",\"null\"]},{\"name\":\"sideID\",\"type\":[\"string\",\"null\"]},{\"name\":\"siteName\",\"type\":[\"string\",\"null\"]}]}}}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   public org.openrtb.common.api.Identification identification;
   public org.openrtb.common.api.Status status;
   public java.util.List<org.openrtb.common.api.Advertiser> advertisers;

  /**
   * Default constructor.
   */
  public BlocklistResponse() {}

  /**
   * All-args constructor.
   */
  public BlocklistResponse(org.openrtb.common.api.Identification identification, org.openrtb.common.api.Status status, java.util.List<org.openrtb.common.api.Advertiser> advertisers) {
    this.identification = identification;
    this.status = status;
    this.advertisers = advertisers;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return identification;
    case 1: return status;
    case 2: return advertisers;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: identification = (org.openrtb.common.api.Identification)value$; break;
    case 1: status = (org.openrtb.common.api.Status)value$; break;
    case 2: advertisers = (java.util.List<org.openrtb.common.api.Advertiser>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'identification' field.
   */
  public org.openrtb.common.api.Identification getIdentification() {
    return identification;
  }

  /**
   * Sets the value of the 'identification' field.
   * @param value the value to set.
   */
  public void setIdentification(org.openrtb.common.api.Identification value) {
    this.identification = value;
  }

  /**
   * Gets the value of the 'status' field.
   */
  public org.openrtb.common.api.Status getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(org.openrtb.common.api.Status value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'advertisers' field.
   */
  public java.util.List<org.openrtb.common.api.Advertiser> getAdvertisers() {
    return advertisers;
  }

  /**
   * Sets the value of the 'advertisers' field.
   * @param value the value to set.
   */
  public void setAdvertisers(java.util.List<org.openrtb.common.api.Advertiser> value) {
    this.advertisers = value;
  }

  /** Creates a new BlocklistResponse RecordBuilder */
  public static org.openrtb.common.api.BlocklistResponse.Builder newBuilder() {
    return new org.openrtb.common.api.BlocklistResponse.Builder();
  }
  
  /** Creates a new BlocklistResponse RecordBuilder by copying an existing Builder */
  public static org.openrtb.common.api.BlocklistResponse.Builder newBuilder(org.openrtb.common.api.BlocklistResponse.Builder other) {
    return new org.openrtb.common.api.BlocklistResponse.Builder(other);
  }
  
  /** Creates a new BlocklistResponse RecordBuilder by copying an existing BlocklistResponse instance */
  public static org.openrtb.common.api.BlocklistResponse.Builder newBuilder(org.openrtb.common.api.BlocklistResponse other) {
    return new org.openrtb.common.api.BlocklistResponse.Builder(other);
  }
  
  /**
   * RecordBuilder for BlocklistResponse instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BlocklistResponse>
    implements org.apache.avro.data.RecordBuilder<BlocklistResponse> {

    private org.openrtb.common.api.Identification identification;
    private org.openrtb.common.api.Status status;
    private java.util.List<org.openrtb.common.api.Advertiser> advertisers;

    /** Creates a new Builder */
    private Builder() {
      super(org.openrtb.common.api.BlocklistResponse.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.openrtb.common.api.BlocklistResponse.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing BlocklistResponse instance */
    private Builder(org.openrtb.common.api.BlocklistResponse other) {
            super(org.openrtb.common.api.BlocklistResponse.SCHEMA$);
      if (isValidValue(fields()[0], other.identification)) {
        this.identification = data().deepCopy(fields()[0].schema(), other.identification);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.status)) {
        this.status = data().deepCopy(fields()[1].schema(), other.status);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.advertisers)) {
        this.advertisers = data().deepCopy(fields()[2].schema(), other.advertisers);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'identification' field */
    public org.openrtb.common.api.Identification getIdentification() {
      return identification;
    }
    
    /** Sets the value of the 'identification' field */
    public org.openrtb.common.api.BlocklistResponse.Builder setIdentification(org.openrtb.common.api.Identification value) {
      validate(fields()[0], value);
      this.identification = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'identification' field has been set */
    public boolean hasIdentification() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'identification' field */
    public org.openrtb.common.api.BlocklistResponse.Builder clearIdentification() {
      identification = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'status' field */
    public org.openrtb.common.api.Status getStatus() {
      return status;
    }
    
    /** Sets the value of the 'status' field */
    public org.openrtb.common.api.BlocklistResponse.Builder setStatus(org.openrtb.common.api.Status value) {
      validate(fields()[1], value);
      this.status = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'status' field has been set */
    public boolean hasStatus() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'status' field */
    public org.openrtb.common.api.BlocklistResponse.Builder clearStatus() {
      status = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'advertisers' field */
    public java.util.List<org.openrtb.common.api.Advertiser> getAdvertisers() {
      return advertisers;
    }
    
    /** Sets the value of the 'advertisers' field */
    public org.openrtb.common.api.BlocklistResponse.Builder setAdvertisers(java.util.List<org.openrtb.common.api.Advertiser> value) {
      validate(fields()[2], value);
      this.advertisers = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'advertisers' field has been set */
    public boolean hasAdvertisers() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'advertisers' field */
    public org.openrtb.common.api.BlocklistResponse.Builder clearAdvertisers() {
      advertisers = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public BlocklistResponse build() {
      try {
        BlocklistResponse record = new BlocklistResponse();
        record.identification = fieldSetFlags()[0] ? this.identification : (org.openrtb.common.api.Identification) defaultValue(fields()[0]);
        record.status = fieldSetFlags()[1] ? this.status : (org.openrtb.common.api.Status) defaultValue(fields()[1]);
        record.advertisers = fieldSetFlags()[2] ? this.advertisers : (java.util.List<org.openrtb.common.api.Advertiser>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
